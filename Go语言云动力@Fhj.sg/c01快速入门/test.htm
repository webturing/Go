<p>package main</p>
<p>import (
	&#34;flag&#34;
	&#34;fmt&#34;
	&#34;html&#34;
	&#34;io/ioutil&#34;
	&#34;os&#34;
	&#34;strings&#34;
)</p>
<p>var (
	esc         = html.EscapeString
	tflag *bool = flag.Bool(&#34;html&#34;, true, &#34;html output&#34;)
)</p>
<p>func main() {
	flag.Parse()
	in, _ := ioutil.ReadAll(os.Stdin)
	out := parse(string(in))
	for i := range out {
		fmt.Println(out[i])
	}
}
func parse(in string) []string {
	s := strings.Split(in, &#34;\n\n&#34;)
	for i := 0; i &lt; len(s); i++ {
		t := s[i]
		if t == &#34;&#34; {
			continue
		}
		if t[0] == &#39;\n&#39; {
			t = t[1:]
		}
		if len(t) &lt; 4 {
			s[i] = para(t)
			continue
		}
		switch t[:2] {
		default:
			s[i] = para(t)
		case &#34;01&#34;:
			s[i] = header(t)
		case &#34;02&#34;:
			s[i] = importFile(t)
		}
	}
	return s
}
func para(s string) string {
	if !*tflag {
		return s
	}
	s = esc(s)
	if s[0] == &#39; &#39; || s[0] == &#39;\t&#39; {
		s = strings.Replace(s, &#34;\t&#34;, &#34;    &#34;, -1)
		return &#34;&lt;pre&gt; +s +&lt;/pre&gt;&#34;
	}
	return &#34;&lt;p&gt;&#34; + s + &#34;&lt;/p&gt;&#34;</p>
<p>}
func header(s string) string {
	if !*tflag {
		return &#34;\t&#34; + s[4:]
	}
	t := string(s[2])
	s = esc(s[4:])
	s = &#34;&lt;h&#34; + t + &#34;&gt;&#34; + s + &#34;&lt;/h&#34; + t + &#34;&gt;&#34;
	return s</p>
<p>}
func importFile(s string) string {
	b, err := ioutil.ReadFile(s[4:])
	var t string
	if err != nil {
		t = fmt.Sprintf(&#34;Error: %v&#34;, err)
	} else {
		t = string(b)
	}
	return para(t)</p>
<p>}
</p>
